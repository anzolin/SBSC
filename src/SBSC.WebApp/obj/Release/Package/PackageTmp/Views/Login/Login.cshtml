@model SBSC.ViewModel.Login.LoginViewModel
@{
    Layout = "~/Views/Shared/_LayoutLogin.cshtml";
}

<div class="page-header">
    <h2>@ViewBag.Title</h2>
</div>

<br />

@*@using (Html.BeginForm("Login", "Login",
            new { ReturnUrl = ViewBag.ReturnUrl },
            FormMethod.Post, new { @class = "form-signin" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-horizontal">
        <div class="form-group">
            @Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Senha, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Senha, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-success" />
            </div>
        </div>
    </div>
}*@

<div class="modal-body">
    <div class="row">
        <div class="col-xs-6">
            <div class="well">
                @using (Html.BeginForm("Login", "Login",
            new { ReturnUrl = ViewBag.ReturnUrl },
            FormMethod.Post, new { id = "loginForm", @class = "form-signin", novalidate = "novalidate" }))
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Senha, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Senha, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger" })
                    </div>
                    <button type="submit" class="btn btn-success btn-block">Login</button>
                }
            </div>
        </div>
        <div class="col-xs-6">
            <p class="lead">Com o SBSC você pode:</p>
            <ul style="line-height: 2">
                <li>Cadastrar pessoas <small>(bibliotecários e alunos)</small>,</li>
                <li>Cadastrar livros,</li>
                <li>Acompanhar reservas,</li>
                <li>Acompanhar empréstimos e devoluções,</li>
                <li>Gerar relatórios,</li>
                <li>e muito mais.</li>
            </ul>
        </div>
    </div>
</div>